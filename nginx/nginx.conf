user nginx;
worker_processes auto;
error_log   /var/log/nginx/error.log notice;
pid         /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octed-stream;
  log_format main   '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;
  sendfile on;
  keepalive_timeout 65;

  server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  _;

    # location / {
    #     proxy_pass http://frontendserver:3000;
    #     # CORS
    #     add_header Access-Control-Allow-Origin "*";
    #     add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
    #     add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";
    #     add_header Access-Control-Allow-Credentials true;

    #     proxy_hide_header 'Access-Control-Allow-Origin';
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }

    location /api/ {
        proxy_pass http://backendserver:8080/;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        # CORS ヘッダーを追加
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        # このヘッダーは Safari で必要です
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }
  }
}